1. Are your tests structured DRY such that new features/changes can be easily tested using existing objects/mocks/feature-steps/etc? Or do you find that lack of testing structure contributes negatively to coding efficiency? OR do you bounce
 on the Devil and write most of your tests from scratch, without concern for DRY?
A:


2. Do you feel that management encourages best practices?
A:


3. What is your process for addressing cruft that you find in the course of a story?
A:

4. Do you feel your department adequately supports reduction  of tech debt, or do you find yourself building on top of bad code?
A:


5. Do you feel that your department has standardized and centralized practices in such a fashion that newcomers can quickly acclimate to your department's conventions? IF not, do you find this to be an issue?
A:

6. Similarly: lets say library 'x' is in the process of being deprecated; is that information well-known enough that future stories no longer reference the deprecated lib?
A:

